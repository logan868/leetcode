83. Remove Duplicates from Sorted List (Easy)

Given a sorted linked list, delete all duplicates such that each element appear only once.

Example 1:

Input: 1->1->2
Output: 1->2

Example 2:

Input: 1->1->2->3->3
Output: 1->2->3

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        ListNode* cur = head;
        // ListNode* nxt = cur->next;
        
        while(cur && cur->next)
        {
            if(cur->val == cur->next->val)
            {
                ListNode* tmp = cur->next;
                cur->next = cur->next->next;
                // nxt = nxt->next;
                
                delete tmp;
            }else
            {
                // cur = nxt;
                cur = cur->next;
            }
            
        }
        return head;
        
    }
};
